# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import order_pb2 as order__pb2


class OrderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendOrder = channel.unary_unary(
                '/order.Order/SendOrder',
                request_serializer=order__pb2.OrderRequest.SerializeToString,
                response_deserializer=order__pb2.OrderReply.FromString,
                )
        self.ListOrder = channel.unary_stream(
                '/order.Order/ListOrder',
                request_serializer=order__pb2.Empty.SerializeToString,
                response_deserializer=order__pb2.OrderRequest.FromString,
                )
        self.DeleteOrder = channel.unary_unary(
                '/order.Order/DeleteOrder',
                request_serializer=order__pb2.OrderId.SerializeToString,
                response_deserializer=order__pb2.OrderReply.FromString,
                )
        self.UpdateOrder = channel.unary_unary(
                '/order.Order/UpdateOrder',
                request_serializer=order__pb2.OrderRequest.SerializeToString,
                response_deserializer=order__pb2.OrderReply.FromString,
                )


class OrderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendOrder(self, request, context):
        """Send Order TODO (Starting with just one item, later change to receive a list of items)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.SendOrder,
                    request_deserializer=order__pb2.OrderRequest.FromString,
                    response_serializer=order__pb2.OrderReply.SerializeToString,
            ),
            'ListOrder': grpc.unary_stream_rpc_method_handler(
                    servicer.ListOrder,
                    request_deserializer=order__pb2.Empty.FromString,
                    response_serializer=order__pb2.OrderRequest.SerializeToString,
            ),
            'DeleteOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteOrder,
                    request_deserializer=order__pb2.OrderId.FromString,
                    response_serializer=order__pb2.OrderReply.SerializeToString,
            ),
            'UpdateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrder,
                    request_deserializer=order__pb2.OrderRequest.FromString,
                    response_serializer=order__pb2.OrderReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'order.Order', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Order(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order.Order/SendOrder',
            order__pb2.OrderRequest.SerializeToString,
            order__pb2.OrderReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/order.Order/ListOrder',
            order__pb2.Empty.SerializeToString,
            order__pb2.OrderRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order.Order/DeleteOrder',
            order__pb2.OrderId.SerializeToString,
            order__pb2.OrderReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/order.Order/UpdateOrder',
            order__pb2.OrderRequest.SerializeToString,
            order__pb2.OrderReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
